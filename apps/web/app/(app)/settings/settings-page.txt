"use client"

import * as React from "react"
import * as TabsPrimitive from "@radix-ui/react-tabs"
import * as SwitchPrimitives from "@radix-ui/react-switch"
import * as SliderPrimitive from "@radix-ui/react-slider"
import { cn } from "@/lib/utils"

import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Label } from "@/components/ui/label"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"

// --- RECREATED SHADCN/UI COMPONENTS (STYLED FOR DARK THEME) ---

// Tabs Component
const Tabs = TabsPrimitive.Root
const TabsList = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.List
    ref={ref}
    className={cn(
      "inline-flex h-10 items-center justify-center rounded-md bg-black/20 p-1 text-secondary-text",
      className
    )}
    {...props}
  />
))
TabsList.displayName = TabsPrimitive.List.displayName
const TabsTrigger = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Trigger
    ref={ref}
    className={cn(
      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-interactive focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white/10 data-[state=active]:text-primary-text data-[state=active]:shadow-sm",
      className
    )}
    {...props}
  />
))
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
const TabsContent = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Content
    ref={ref}
    className={cn(
      "mt-4 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-interactive focus-visible:ring-offset-2",
      className
    )}
    {...props}
  />
))
TabsContent.displayName = TabsPrimitive.Content.displayName

// Switch Component
const Switch = React.forwardRef<
  React.ElementRef<typeof SwitchPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
>(({ className, ...props }, ref) => (
  <SwitchPrimitives.Root
    className={cn(
      "peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-interactive focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary-interactive data-[state=unchecked]:bg-white/20",
      className
    )}
    {...props}
    ref={ref}
  >
    <SwitchPrimitives.Thumb
      className={cn(
        "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0"
      )}
    />
  </SwitchPrimitives.Root>
))
Switch.displayName = SwitchPrimitives.Root.displayName

// Slider Component
const Slider = React.forwardRef<
  React.ElementRef<typeof SliderPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>
>(({ className, ...props }, ref) => (
  <SliderPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex w-full touch-none select-none items-center",
      className
    )}
    {...props}
  >
    <SliderPrimitive.Track className="relative h-2 w-full grow overflow-hidden rounded-full bg-white/10">
      <SliderPrimitive.Range className="absolute h-full bg-primary-interactive" />
    </SliderPrimitive.Track>
    <SliderPrimitive.Thumb className="block h-5 w-5 rounded-full border-2 border-primary-interactive bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-interactive focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50" />
  </SliderPrimitive.Root>
))
Slider.displayName = SliderPrimitive.Root.displayName


// --- MAIN SETTINGS PAGE COMPONENT ---

export default function SettingsPage() {
    const [sliderValue, setSliderValue] = React.useState([50]);

  return (
    <div className="w-full space-y-6">
      {/* Page Header */}
      <div>
        <h1 className="text-3xl font-bold tracking-tight text-primary-text">Settings</h1>
        <p className="mt-1 text-secondary-text">Manage your account and preferences.</p>
      </div>

      {/* Tabs Layout */}
      <Tabs defaultValue="account" className="w-full">
        <TabsList>
          <TabsTrigger value="account">Account</TabsTrigger>
          <TabsTrigger value="display">Display</TabsTrigger>
          <TabsTrigger value="ai-controls">AI Controls</TabsTrigger>
        </TabsList>

        {/* Account Tab */}
        <TabsContent value="account">
          <Card>
            <CardHeader>
              <CardTitle>Account Information</CardTitle>
              <CardDescription>View your account and subscription details.</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex flex-col space-y-1">
                <span className="text-sm font-medium text-secondary-text">Email</span>
                <span className="text-primary-text">jane.doe@example.com</span>
              </div>
              <div className="flex flex-col space-y-1">
                <span className="text-sm font-medium text-secondary-text">Subscription</span>
                <span className="text-primary-text font-semibold">Pro Tier</span>
              </div>
              <Button className="mt-2">Manage Subscription</Button>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Display Tab */}
        <TabsContent value="display">
          <Card>
            <CardHeader>
              <CardTitle>Display Preferences</CardTitle>
              <CardDescription>Customize the look and feel of the application.</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="flex items-center justify-between rounded-lg border border-white/10 p-4">
                  <div>
                      <Label htmlFor="theme-mode" className="font-semibold">Theme</Label>
                      <p className="text-sm text-secondary-text">The application is currently in Dark Mode.</p>
                  </div>
                <Switch id="theme-mode" defaultChecked={true} disabled />
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* AI Controls Tab */}
        <TabsContent value="ai-controls">
          <Card>
            <CardHeader>
              <CardTitle>AI Communication Assistant</CardTitle>
              <CardDescription>Configure how the AI interacts with buyers.</CardDescription>
            </CardHeader>
            <CardContent className="space-y-8">
              <div className="flex items-center justify-between rounded-lg border border-white/10 p-4">
                <div>
                    <Label htmlFor="automated-responses" className="font-semibold">Enable Automated Responses</Label>
                    <p className="text-sm text-secondary-text">Allow the AI to automatically respond to common questions.</p>
                </div>
                <Switch id="automated-responses" defaultChecked={true} />
              </div>

              <div className="space-y-2">
                <Label htmlFor="response-tone">Response Tone</Label>
                <Select defaultValue="friendly">
                    <SelectTrigger id="response-tone" className="w-[280px]">
                        <SelectValue placeholder="Select a tone" />
                    </SelectTrigger>
                    <SelectContent>
                        <SelectItem value="friendly">Friendly</SelectItem>
                        <SelectItem value="professional">Professional</SelectItem>
                        <SelectItem value="firm">Firm</SelectItem>
                    </SelectContent>
                </Select>
                 <p className="text-sm text-secondary-text">Set the default personality for AI-generated messages.</p>
              </div>

              <div className="space-y-3">
                <Label htmlFor="decline-threshold">Auto-Decline Offer Threshold</Label>
                 <p className="text-sm text-secondary-text">
                    Automatically decline offers that are less than <span className="font-bold text-primary-interactive">{sliderValue[0]}%</span> of your listing price.
                </p>
                <Slider
                  id="decline-threshold"
                  defaultValue={[50]}
                  max={100}
                  step={1}
                  onValueChange={(value) => setSliderValue(value)}
                />
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}

